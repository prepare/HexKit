<Window x:Class="Hexkit.Editor.Dialog.ChangeEntity"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
    xmlns:tw="clr-namespace:Tektosyne.Windows;assembly=Tektosyne.Windows"
    xmlns:hg="clr-namespace:Hexkit.Graphics;assembly=Hexkit.Graphics"
    Title="Change Entity Class: " MinWidth="440" MinHeight="395" Width="440" Height="395" ResizeMode="CanResizeWithGrip" ShowInTaskbar="False" WindowStartupLocation="CenterOwner">
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Hexkit.Global;component/Styles.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Window.Resources>
  <Window.CommandBindings>
    <CommandBinding Command="Help" Executed="HelpExecuted" />
  </Window.CommandBindings>
  <DockPanel>
    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Center">
      <Button IsDefault="True" Click="OnAccept" Style="{StaticResource dialogButtonStyle}">OK</Button>
      <Button IsCancel="True" Style="{StaticResource dialogButtonStyle}">Cancel</Button>
      <Button Command="Help" Style="{StaticResource dialogButtonStyle}">Help</Button>
    </StackPanel>
    <TabControl Name="DialogTabControl" x:FieldModifier="private" SelectionChanged="OnTabSelected">
      <TabItem Name="TextTab" x:FieldModifier="private" Header="Text">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
          </Grid.RowDefinitions>
          <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=NameBox}">Class _Name:</Label>
          <TextBox Name="NameBox" x:FieldModifier="private" Grid.Column="1" Grid.Row="0" TextChanged="OnTextChanged" />
          <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Target="{Binding ElementName=DetailBox}">_Informational Text (use blank lines to separate paragraphs):</Label>
          <TextBox Name="DetailBox" x:FieldModifier="private" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" Style="{StaticResource labelAboveStyle}" AcceptsReturn="true"  TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" TextChanged="OnTextChanged" />
        </Grid>
      </TabItem>
      <TabItem Name="ImagesTab" x:FieldModifier="private" Header="Images">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <!-- AvailableImageList is defined but not shown in this dialog. See ShowAvailableImageList for details. -->
          <hg:ImageListBox Name="AvailableImageList" x:FieldModifier="private" Margin="0"  Visibility="Collapsed"
                           hg:ImageListBoxItem.MouseDoubleClick="OnAvailableImageActivate" ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <ListBox.ItemsPanel>
              <ItemsPanelTemplate>
                <WrapPanel Orientation="Vertical" />
              </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
          </hg:ImageListBox>
          <ListView Name="ImageList" x:FieldModifier="private" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" SelectionMode="Single" SelectionChanged="OnImageSelected">
            <ListView.View>
              <GridView>
                <!-- column width is set by ImageList.ActualWidth.ValueChanged -->
                <GridViewColumn x:Name="ImageColumn" x:FieldModifier="private" Header="Image Stack" DisplayMemberBinding="{Binding Key}" />
              </GridView>
            </ListView.View>
          </ListView>
          <GroupBox Header="Positioning" Grid.Column="0" Grid.Row="1">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Label Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" Target="{Binding ElementName=XOffsetUpDownHost}">_X</Label>
              <tw:WindowsFormsHostEx x:Name="XOffsetUpDownHost" x:FieldModifier="private" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" Width="60">
                <tw:NumericUpDownHost x:Name="XOffsetUpDown" x:FieldModifier="private" Minimum="-200" Maximum="200" TextAlign="Right" ValueChanged="OnOffsetChanged" />
              </tw:WindowsFormsHostEx>
              <Label Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" Target="{Binding ElementName=YOffsetUpDownHost}">_Y</Label>
              <tw:WindowsFormsHostEx x:Name="YOffsetUpDownHost" x:FieldModifier="private" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Width="60">
                <tw:NumericUpDownHost x:Name="YOffsetUpDown" x:FieldModifier="private" Minimum="-200" Maximum="200" TextAlign="Right" ValueChanged="OnOffsetChanged" />
              </tw:WindowsFormsHostEx>
              <CheckBox Name="XMirrorToggle" x:FieldModifier="private" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" Click="OnMirrorChanged">X-_Mirror</CheckBox>
              <CheckBox Name="YMirrorToggle" x:FieldModifier="private" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Click="OnMirrorChanged">Y-M_irror</CheckBox>
            </Grid>
          </GroupBox>
          <GroupBox Header="Color Shift" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Label Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" Target="{Binding ElementName=RedUpDownHost}">_R</Label>
              <tw:WindowsFormsHostEx x:Name="RedUpDownHost" x:FieldModifier="private" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" Width="60">
                <tw:NumericUpDownHost x:Name="RedUpDown" x:FieldModifier="private" Minimum="-255" Maximum="255" TextAlign="Right" ValueChanged="OnColorChanged" />
              </tw:WindowsFormsHostEx>
              <Label Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" Target="{Binding ElementName=GreenUpDownHost}">_G</Label>
              <tw:WindowsFormsHostEx x:Name="GreenUpDownHost" x:FieldModifier="private" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Width="60">
                <tw:NumericUpDownHost x:Name="GreenUpDown" x:FieldModifier="private" Minimum="-255" Maximum="255" TextAlign="Right" ValueChanged="OnColorChanged" />
              </tw:WindowsFormsHostEx>
              <Label Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" Target="{Binding ElementName=BlueUpDownHost}">_B</Label>
              <tw:WindowsFormsHostEx x:Name="BlueUpDownHost" x:FieldModifier="private" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Width="60">
                <tw:NumericUpDownHost x:Name="BlueUpDown" x:FieldModifier="private" Minimum="-255" Maximum="255" TextAlign="Right" ValueChanged="OnColorChanged" />
              </tw:WindowsFormsHostEx>
            </Grid>
          </GroupBox>
          <Grid Grid.Column="2" Grid.Row="0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Margin="0,5,0,0">
              <Button Name="AddImageButton" x:FieldModifier="private" Style="{StaticResource symbolButtonStyle}" ToolTip="Add Image" Click="OnImageAdd" />
              <Button Name="RemoveImageButton" x:FieldModifier="private" Style="{StaticResource symbolButtonStyle}" ToolTip="Remove Image" Click="OnImageRemove" />
              <Button Name="MoveImageUpButton" x:FieldModifier="private" Style="{StaticResource symbolButtonStyle}" ToolTip="Move Image Up" Click="OnImageUp" />
              <Button Name="MoveImageDownButton" x:FieldModifier="private" Style="{StaticResource symbolButtonStyle}" ToolTip="Move Image Down" Click="OnImageDown" />
              <Button Name="FindImageButton" x:FieldModifier="private" Style="{StaticResource symbolButtonStyle}" ToolTip="Find Image In List" Click="OnImageFind" />
            </StackPanel>
            <GroupBox Grid.Column="1" Grid.Row="0" Header="Stack Preview">
              <hg:ImageStackRenderer Name="StackPreview" x:FieldModifier="private" />
            </GroupBox>
          </Grid>
          <GroupBox Header="Feature Use" Grid.Column="2" Grid.Row="1">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <CheckBox Name="UnconnectedToggle" x:FieldModifier="private" Grid.Column="0" Grid.Row="0" Click="OnUsageChanged">Un_connected</CheckBox>
              <CheckBox Name="UnscaledToggle" x:FieldModifier="private" Grid.Column="1" Grid.Row="0" Click="OnUsageChanged">Un_scaled</CheckBox>
              <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
                <TextBlock Name="FrameInfo" x:FieldModifier="private"><LineBreak /></TextBlock>
              </Label>
              <Button Name="OneFrameButton" x:FieldModifier="private" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Center" Click="OnFrameOne">Use _One…</Button>
              <Button Name="AllFrameButton" x:FieldModifier="private" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Center" Click="OnFrameAll">Use _All</Button>
            </Grid>
          </GroupBox>
        </Grid>
      </TabItem>
      <TabItem Name="VariablesTab" x:FieldModifier="private" Header="Variables">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
          </Grid.RowDefinitions>
          <StackPanel Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Orientation="Vertical">
            <GroupBox Header="Category">
              <StackPanel Orientation="Vertical">
                <RadioButton Name="AttributeToggle" x:FieldModifier="private" ToolTip="Show Attribute Variables" Checked="OnVariableCategory">_Attribute</RadioButton>
                <RadioButton Name="CounterToggle" x:FieldModifier="private" ToolTip="Show Counter Variables" Checked="OnVariableCategory">_Counter</RadioButton>
                <RadioButton Name="ResourceToggle" x:FieldModifier="private" ToolTip="Show Resource Variables" Checked="OnVariableCategory">_Resource</RadioButton>
                <RadioButton Name="BuildResourceToggle" x:FieldModifier="private" ToolTip="Show Faction Build Costs" Checked="OnVariableCategory">B_uild Cost</RadioButton>
              </StackPanel>
            </GroupBox>
            <Label Target="{Binding ElementName=VariableUpDownHost}">Variable _Value:</Label>
            <tw:WindowsFormsHostEx x:Name="VariableUpDownHost" x:FieldModifier="private" Width="100">
              <tw:NumericUpDownHost x:Name="VariableUpDown" x:FieldModifier="private" TextAlign="Right" ThousandsSeparator="True" ValueChanged="OnVariableChanged" />
            </tw:WindowsFormsHostEx>
            <Label Height="10" />
            <Button Name="AddVariableBasicButton" x:FieldModifier="private" Click="OnVariableAdd">Add _Basic Value</Button>
            <ComboBox Name="AddVariableModifierCombo" x:FieldModifier="private" Style="{StaticResource buttonComboStyle}" AccessKeyManager.AccessKeyPressed="OnVariableModifierAccess" SelectedIndex="0" SelectionChanged="OnVariableModifier">
              <ComboBoxItem>
                <AccessText>Add _Modifier…</AccessText>
              </ComboBoxItem>
              <Separator />
            </ComboBox>
            <Button Name="RemoveVariableButton" x:FieldModifier="private" Click="OnVariableRemove">R_emove Variable</Button>
          </StackPanel>
          <ListView Name="VariableList" x:FieldModifier="private" Grid.Column="1" Grid.Row="0" SelectionMode="Single" SelectionChanged="OnVariableSelected">
            <!-- HACK: allows right-aligned column content -->
            <ListView.ItemContainerStyle>
              <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
              </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
              <GridView>
                <!-- column widths are set by VariableList.ActualWidth.ValueChanged -->
                <GridViewColumn x:Name="VariableColumn" x:FieldModifier="private" Header="Variable" DisplayMemberBinding="{Binding Id}" />
                <GridViewColumn x:Name="VariableValueColumn" x:FieldModifier="private" Header="Value">
                  <GridViewColumn.CellTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Value}" TextAlignment="Right" />
                    </DataTemplate>
                  </GridViewColumn.CellTemplate>
                </GridViewColumn>
              </GridView>
            </ListView.View>
          </ListView>
          <ListView Name="AvailableVariableList" x:FieldModifier="private" Grid.Column="1" Grid.Row="1" SelectionMode="Single" ListViewItem.MouseDoubleClick="OnAvailableVariableActivate">
            <ListView.View>
              <GridView>
                <!-- column width is set by AvailableVariableList.ActualWidth.ValueChanged -->
                <GridViewColumn x:Name="AvailableVariableColumn" x:FieldModifier="private" Header="Available Variables" DisplayMemberBinding="{Binding Id}" />
              </GridView>
            </ListView.View>
          </ListView>
        </Grid>
      </TabItem>
      <TabItem Name="AbilitiesTab" x:FieldModifier="private" Header="Abilities">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
          </Grid.RowDefinitions>
          <GroupBox Name="AbilitiesGroup" x:FieldModifier="private" Header="Abilities" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=TransferCombo}">_Resource Transfer:</Label>
              <ComboBox Grid.Column="1" Grid.Row="0" Name="TransferCombo" x:FieldModifier="private" SelectionChanged="OnUserInput" />
              <CheckBox Name="BlocksAttackToggle" x:FieldModifier="private" Grid.Column="0" Grid.Row="1" Click="OnUserInput">Blocks A_ttack</CheckBox>
              <CheckBox Name="CaptureToggleTerrain" x:FieldModifier="private" Grid.Column="1" Grid.Row="1" Visibility="Hidden" Click="OnUserInput">Units Can _Capture</CheckBox>
              <CheckBox Name="DestroyToggleTerrain" x:FieldModifier="private" Grid.Column="2" Grid.Row="1" Visibility="Hidden" Click="OnUserInput">Owner Can _Destroy</CheckBox>
              <CheckBox Name="CaptureToggleUnit" x:FieldModifier="private" Grid.Column="1" Grid.Row="1" Visibility="Hidden" Click="OnUserInput">Can _Capture Sites</CheckBox>
              <CheckBox Name="DefendToggleUnit" x:FieldModifier="private" Grid.Column="2" Grid.Row="0" Visibility="Hidden" Click="OnUserInput">Can _Defend Only</CheckBox>
              <CheckBox Name="HealingToggleUnit" x:FieldModifier="private" Grid.Column="2" Grid.Row="1" Visibility="Hidden" Click="OnUserInput">Can _Heal Damage</CheckBox>
            </Grid>
          </GroupBox>
          <GroupBox Name="OptionsGroup" x:FieldModifier="private" Header="Options" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <CheckBox Name="BackgroundToggleTerrain" x:FieldModifier="private" Grid.Column="0" Grid.Row="0" Click="OnUserInput">_Background Terrain</CheckBox>
              <Label Name="DifficultyLabelTerrain" x:FieldModifier="private" Grid.Column="0" Grid.Row="1" Target="{Binding ElementName=DifficultyComboTerrain}">_Difficulty Attribute:</Label>
              <ComboBox Name="DifficultyComboTerrain" x:FieldModifier="private" Grid.Column="1" Grid.Row="1" Width="200" SelectionChanged="OnUserInput" />
              <Label Name="ElevationLabelTerrain" x:FieldModifier="private" Grid.Column="0" Grid.Row="2" Target="{Binding ElementName=ElevationComboTerrain}">_Elevation Attribute:</Label>
              <ComboBox Name="ElevationComboTerrain" x:FieldModifier="private" Grid.Column="1" Grid.Row="2" Width="200" SelectionChanged="OnUserInput" />
              <Label Name="RangedAttackLabelUnit" x:FieldModifier="private" Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=RangedAttackComboUnit}">Ran_ged Attack Mode:</Label>
              <ComboBox Name="RangedAttackComboUnit" x:FieldModifier="private" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" Width="60" SelectionChanged="OnUserInput" />
              <Label Name="AttackRangeLabelUnit" x:FieldModifier="private" Grid.Column="0" Grid.Row="1" Target="{Binding ElementName=AttackRangeComboUnit}">_Attack Range Attribute:</Label>
              <ComboBox Name="AttackRangeComboUnit" x:FieldModifier="private" Grid.Column="1" Grid.Row="1" Width="200" SelectionChanged="OnUserInput" />
              <Label Name="MovementLabelUnit" x:FieldModifier="private" Grid.Column="0" Grid.Row="2" Target="{Binding ElementName=MovementComboUnit}">_Movement Attribute:</Label>
              <ComboBox Name="MovementComboUnit" x:FieldModifier="private" Grid.Column="1" Grid.Row="2" Width="200" SelectionChanged="OnUserInput" />
              <Label Name="MoraleLabelUnit" x:FieldModifier="private" Grid.Column="0" Grid.Row="3" Target="{Binding ElementName=MoraleComboUnit}">M_orale Resource:</Label>
              <ComboBox Name="MoraleComboUnit" x:FieldModifier="private" Grid.Column="1" Grid.Row="3" Width="200" SelectionChanged="OnUserInput" />
              <Label Name="StrengthLabelUnit" x:FieldModifier="private" Grid.Column="0" Grid.Row="4" Target="{Binding ElementName=StrengthComboUnit}">_Strength Resource:</Label>
              <ComboBox Name="StrengthComboUnit" x:FieldModifier="private" Grid.Column="1" Grid.Row="4" Width="200" SelectionChanged="OnUserInput" />
              <Label Name="OptionsInfo" x:FieldModifier="private" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Visibility="Hidden">
                Entities of this category provide no further options.
              </Label>
            </Grid>
          </GroupBox>
        </Grid>
      </TabItem>
      <TabItem Name="OtherTab" x:FieldModifier="private" Header="Other">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="10" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="10" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <Label Grid.Column="0" Grid.Row="1" Target="{Binding ElementName=ModifierRangeUpDown}">Modifier _Range:</Label>
          <tw:WindowsFormsHostEx Grid.Column="1" Grid.Row="1" Width="60">
            <tw:NumericUpDownHost x:Name="ModifierRangeUpDown" x:FieldModifier="private" Minimum="0" TextAlign="Right" ValueChanged="OnUserInput" />
          </tw:WindowsFormsHostEx>
          <Label Grid.Column="0" Grid.Row="2" Target="{Binding ElementName=ValuationUpDown}">Computer _Valuation:</Label>
          <tw:WindowsFormsHostEx Grid.Column="1" Grid.Row="2" Width="60">
            <tw:NumericUpDownHost x:Name="ValuationUpDown" x:FieldModifier="private" DecimalPlaces="2" Increment="0.01" Minimum="0" Maximum="1" TextAlign="Right" ValueChanged="OnUserInput" />
          </tw:WindowsFormsHostEx>
          <GroupBox Header="Map View Options" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4">
            <StackPanel Orientation="Vertical">
              <CheckBox Name="VisibleToggle" x:FieldModifier="private" Click="OnUserInput">_Show Images</CheckBox>
              <CheckBox Name="DropShadowToggle" x:FieldModifier="private" Click="OnUserInput">Add _Drop Shadow</CheckBox>
              <CheckBox Name="TranslucentToggle" x:FieldModifier="private" Click="OnUserInput">_Translucent Images</CheckBox>
            </StackPanel>
          </GroupBox>
        </Grid>
      </TabItem>
    </TabControl>
  </DockPanel>
</Window>
