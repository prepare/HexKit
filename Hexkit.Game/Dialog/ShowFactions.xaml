<Window x:Class="Hexkit.Game.Dialog.ShowFactions"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="Faction Status: " MinWidth="460" MinHeight="340" Width="460" Height="340" ResizeMode="CanResizeWithGrip" ShowInTaskbar="False" WindowStartupLocation="CenterOwner">
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Hexkit.Global;component/Styles.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Window.Resources>
  <Window.CommandBindings>
    <CommandBinding Command="Help" Executed="HelpExecuted" />
  </Window.CommandBindings>
  <DockPanel>
    <Grid DockPanel.Dock="Top">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=FactionCombo}">_Faction:</Label>
      <ComboBox Name="FactionCombo" x:FieldModifier="private" SelectionChanged="OnFactionSelected" Grid.Column="1" Grid.Row="0" />
      <Label Name="FactionColorInfo" x:FieldModifier="private" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Height="8" Margin="0,0,0,4" />
      <Label Name="FactionLiveInfo" x:FieldModifier="private" Grid.Column="2" Grid.Row="0">This faction is still in the game.</Label>
      <Label Name="FactionDeadInfo" x:FieldModifier="private" Grid.Column="2" Grid.Row="0">This faction has been eliminated.</Label>
    </Grid>
    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Center">
      <Button IsCancel="True" IsDefault="True" Click="OnAccept" Style="{StaticResource dialogButtonStyle}">OK</Button>
      <Button Command="Help" Style="{StaticResource dialogButtonStyle}">Help</Button>
    </StackPanel>
    <TabControl>
      <TabItem Name="GeneralTab" x:FieldModifier="private" Header="General">
        <TextBox Name="FactionInfo" x:FieldModifier="private" HorizontalScrollBarVisibility="Disabled" IsReadOnly="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" Style="{StaticResource defaultStyle}" />
      </TabItem>
      <TabItem Name="AssetsTab" x:FieldModifier="private" Header="Assets" Grid.IsSharedSizeScope="True">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <GroupBox Header="Sites" Grid.Column="0" Grid.Row="0">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="68" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition SharedSizeGroup="AssetHeight" />
                <RowDefinition SharedSizeGroup="AssetHeight" />
                <RowDefinition SharedSizeGroup="AssetHeight" />
              </Grid.RowDefinitions>
              <Label Grid.Column="0" Grid.Row="0">Owned:</Label>
              <TextBox Name="OwnedInfo" x:FieldModifier="private" Grid.Column="1" Grid.Row="0" IsReadOnly="True" TextAlignment="Right" />
              <Label Grid.Column="0" Grid.Row="1">Unowned:</Label>
              <TextBox Name="UnownedInfo" x:FieldModifier="private" Grid.Column="1" Grid.Row="1" IsReadOnly="True" TextAlignment="Right" />
              <Label  Grid.Column="0" Grid.Row="2">Conquest:</Label>
              <TextBox Name="ConquestInfo" x:FieldModifier="private" Grid.Column="1" Grid.Row="2" IsReadOnly="True" TextAlignment="Right" />
            </Grid>
          </GroupBox>
          <GroupBox Header="Entities" Grid.Column="1" Grid.Row="0">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="68" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition SharedSizeGroup="AssetHeight" />
                <RowDefinition SharedSizeGroup="AssetHeight" />
                <RowDefinition SharedSizeGroup="AssetHeight" />
              </Grid.RowDefinitions>
              <Label Grid.Column="0" Grid.Row="0">Units:</Label>
              <TextBox Name="UnitsInfo" x:FieldModifier="private" Grid.Column="1" Grid.Row="0" IsReadOnly="True" TextAlignment="Right" />
              <Button Name="ShowUnitsButton" x:FieldModifier="private" Grid.Column="2" Grid.Row="0" Click="OnShowEntities">Show _Units…</Button>
              <Label  Grid.Column="0" Grid.Row="1">Terrains:</Label>
              <TextBox Name="TerrainsInfo" x:FieldModifier="private" Grid.Column="1" Grid.Row="1" IsReadOnly="True" TextAlignment="Right" />
              <Button Name="ShowTerrainsButton" x:FieldModifier="private" Grid.Column="2" Grid.Row="1" Click="OnShowEntities">Show _Terrains…</Button>
              <Label Grid.Column="0" Grid.Row="2">Upgrades:</Label>
              <TextBox Name="UpgradesInfo" x:FieldModifier="private" Grid.Column="1" Grid.Row="2" IsReadOnly="True" TextAlignment="Right" />
              <Button Name="ShowUpgradesButton" x:FieldModifier="private" Grid.Column="2" Grid.Row="2" Click="OnShowEntities">Show Up_grades…</Button>
            </Grid>
          </GroupBox>
          <GroupBox Header="Home Site" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Label Grid.Column="0" Grid.Row="0">Location:</Label>
              <TextBox Name="HomeSiteInfo" x:FieldModifier="private" Grid.Column="1" Grid.Row="0" IsReadOnly="True" Text="(000,000)" TextAlignment="Center" Width="60" />
              <Label Grid.Column="2" Grid.Row="0">Owner:</Label>
              <TextBox Name="HomeOwnerInfo" x:FieldModifier="private" Grid.Column="3" Grid.Row="0" IsReadOnly="True" TextAlignment="Left" />
              <Button Name="SelectHomeButton" x:FieldModifier="private" Grid.Column="4" Grid.Row="0" VerticalAlignment="Center" Click="OnSelectHome">_Select Site</Button>
            </Grid>
          </GroupBox>
        </Grid>
      </TabItem>
      <TabItem Name="ClassesTab" x:FieldModifier="private" Header="Classes">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <GroupBox Header="Category" Grid.Column="0" Grid.Row="0" VerticalAlignment="Top">
            <StackPanel Orientation="Vertical">
              <RadioButton Name="UnitToggle" x:FieldModifier="private" ToolTip="Show Units" Checked="OnCategoryChecked">_Unit</RadioButton>
              <RadioButton Name="TerrainToggle" x:FieldModifier="private" ToolTip="Show Terrains" Checked="OnCategoryChecked">_Terrain</RadioButton>
              <RadioButton Name="UpgradeToggle" x:FieldModifier="private" ToolTip="Show Upgrades" Checked="OnCategoryChecked">Up_grade</RadioButton>
            </StackPanel>
          </GroupBox>
          <ListView Name="ClassList" x:FieldModifier="private" Grid.Column="1" Grid.Row="0" SelectionMode="Single" ListViewItem.MouseDoubleClick="OnClassActivate">
            <!-- HACK: allows centered column content -->
            <ListView.ItemContainerStyle>
              <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
              </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
              <GridView>
                <!-- column width is set by ClassList.ActualWidth.ValueChanged -->
                <GridViewColumn x:Name="ClassColumn" x:FieldModifier="private" Header="Entity Class" DisplayMemberBinding="{Binding Item1}" />
                <GridViewColumn x:Name="ClassAbilityColumn" x:FieldModifier="private" Header="Abilities" Width="60">
                  <GridViewColumn.CellTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Item2}" TextAlignment="Center" />
                    </DataTemplate>
                  </GridViewColumn.CellTemplate>
                </GridViewColumn>
              </GridView>
            </ListView.View>
          </ListView>
          <Button Name="ShowPlaceButton" x:FieldModifier="private" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Center" Click="OnShowPlacements">Show _Placement Sites…</Button>
        </Grid>
      </TabItem>
      <TabItem Name="VariablesTab" x:FieldModifier="private" Header="Resources">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition />
          </Grid.RowDefinitions>
          <ListView Name="VariableList" x:FieldModifier="private" Grid.Column="0" Grid.Row="0" SelectionMode="Single" ListViewItem.MouseDoubleClick="OnVariableActivate"  SelectionChanged="OnVariableSelected">
            <!-- HACK: allows right-aligned column content -->
            <ListView.ItemContainerStyle>
              <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
              </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
              <GridView>
                <!-- column width is set by VariableList.ActualWidth.ValueChanged -->
                <GridViewColumn x:Name="VariableColumn" x:FieldModifier="private" Header="Resource" DisplayMemberBinding="{Binding Item1}" />
                <GridViewColumn x:Name="VariableValueColumn" x:FieldModifier="private" Header="Value" Width="80">
                  <GridViewColumn.CellTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Item2}" TextAlignment="Right" />
                    </DataTemplate>
                  </GridViewColumn.CellTemplate>
                </GridViewColumn>
              </GridView>
            </ListView.View>
          </ListView>
          <ListView Name="ModifierList" x:FieldModifier="private" Grid.Column="2" Grid.Row="0" SelectionMode="Single" Width="190">
            <!-- HACK: allows right-aligned column content -->
            <ListView.ItemContainerStyle>
              <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
              </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
              <GridView>
                <GridViewColumn Header="Modifier" DisplayMemberBinding="{Binding Item1}" Width="80" />
                <GridViewColumn Header="Value" Width="80">
                  <GridViewColumn.CellTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Item2}" TextAlignment="Right" />
                    </DataTemplate>
                  </GridViewColumn.CellTemplate>
                </GridViewColumn>
              </GridView>
            </ListView.View>
          </ListView>
        </Grid>
      </TabItem>
      <TabItem Name="ConditionsTab" x:FieldModifier="private" Header="Conditions">
        <ListView Name="ConditionList" x:FieldModifier="private" Grid.Column="2" Grid.Row="0" SelectionMode="Single" ListViewItem.MouseDoubleClick="OnConditionActivate">
          <!-- HACK: allows right-aligned column content -->
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>
          </ListView.ItemContainerStyle>
          <ListView.View>
            <GridView>
              <!-- column width is set by ConditionList.ActualWidth.ValueChanged -->
              <GridViewColumn x:Name="ConditionColumn" x:FieldModifier="private" Header="Parameter" DisplayMemberBinding="{Binding ParameterText}" />
              <GridViewColumn x:Name="ConditionDefeatColumn" x:FieldModifier="private" Header="Defeat" Width="80">
                <GridViewColumn.CellTemplate>
                  <DataTemplate>
                    <TextBlock Text="{Binding Defeat}" TextAlignment="Right" />
                  </DataTemplate>
                </GridViewColumn.CellTemplate>
              </GridViewColumn>
              <GridViewColumn x:Name="ConditionCurrentColumn" x:FieldModifier="private" Header="Current" Width="80">
                <GridViewColumn.CellTemplate>
                  <DataTemplate>
                    <TextBlock Text="{Binding Current}" TextAlignment="Right" />
                  </DataTemplate>
                </GridViewColumn.CellTemplate>
              </GridViewColumn>
              <GridViewColumn x:Name="ConditionVictoryColumn" x:FieldModifier="private" Header="Victory" Width="80">
                <GridViewColumn.CellTemplate>
                  <DataTemplate>
                    <TextBlock Text="{Binding Victory}" TextAlignment="Right" />
                  </DataTemplate>
                </GridViewColumn.CellTemplate>
              </GridViewColumn>
            </GridView>
          </ListView.View>
        </ListView>
      </TabItem>
    </TabControl>
  </DockPanel>
</Window>
